# simple is not always best

# parse_git_dirty() {
#   STATUS="$(git status 2> /dev/null)"
#   case "$STATUS" in *"renamed"*) printf "${cyan}~${reset}"; ;; esac
#   case "$STATUS" in *"branch is ahead"*) printf "${purple}!${reset}"; ;; esac
#   case "$STATUS" in *"new file"*) printf "${blue}+${reset}"; ;; esac
#   case "$STATUS" in *"Untracked files"*) printf "${cyan}?${reset}"; ;; esac
#   case "$STATUS" in *"modified"*) printf "${yellow}*${reset}"; ;; esac
#   case "$STATUS" in *"deleted"*) printf "${red}-${reset}"; ;; esac
#   case "$STATUS" in *"branch is behind"*) printf "${red}ˬˬ${reset}"; ;; esac
# }

# refactor above function
parse_git_dirty() {
  for STATUS in $(git status 2> /dev/null | sed -e 's/^# / /' -e 's/^#\t/ /' | cut -d ' ' -f 1); do
    case "$STATUS" in
      *"renamed"*) printf "${cyan}~${reset}"; ;;
      *"ahead"*) printf "${purple}!${reset}"; ;;
      *"new file"*) printf "${blue}+${reset}"; ;;
      *"Untracked files"*) printf "${cyan}?${reset}"; ;;
      *"modified"*) printf "${yellow}*${reset}"; ;;
      *"deleted"*) printf "${red}-${reset}"; ;;
      *"behind"*) printf "${red}ˬˬ${reset}"; ;;
    esac
  done
}

# create some helpful aliases
alias gs='git status'
alias gd='git diff'
alias gc='git commit -m'
alias gp='git push'
alias gcb='git checkout -b'
alias gco='git checkout'
alias gf='git fetch'

# export the colours
red='\033[0;31m'          # Red
cyan='\033[0;96m'         # Cyan
yellow='\033[0;92m'       # Yellow (not really)
blue='\033[0;34m'         # Blue
reset='\e[0m'             # reset
purple='\033[0;35m'       # purple

parse_git_branch() {
  git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'
}

export_ps1() {
  export PS1="\$(parse_git_branch) \$(parse_git_dirty) λ "
}

export_ps1
PROMPT_COMMAND='export_ps1'